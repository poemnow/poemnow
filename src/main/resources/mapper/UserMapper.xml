<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cgm.poemnow.mapper.UserMapper" >

    <resultMap id="userMap" type="com.cgm.poemnow.domain.User">
        <result column="id" property="id"/>
        <result column="user_id" property="userId" />
        <result column="user_nickname" property="userNickname"/>
        <result column="user_name" property="userName"/>
        <result column="user_birth" property="userBirth"/>
        <result column="email" property="email"/>
        <result column="user_phone" property="userPhone"/>
        <result column="password" property="password"/>
        <result column="profile_pic" property="profilePic"/>
        <result column="bio" property="bio"/>
        <result column="social_url" property="socialUrl"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="follower_cnt" property="followerCnt"/>
        <result column="following_cnt" property="followingCnt"/>
        <result column="is_active" property="isActive"/>
        <result column="is_logged_in" property="isLoggedIn"/>
    </resultMap>

    <insert id="insertUser" parameterType="com.cgm.poemnow.domain.User">
        INSERT INTO user
            (
             user_id,
             user_nickname,
             user_name,
             user_birth,
             email,
             user_phone,
             password
             )
        VALUES
            (
             #{userId},
             #{userNickname},
             #{userName},
             #{userBirth, jdbcType=TIMESTAMP},
             #{email},
             #{userPhone},
             #{password}
             )
    </insert>

    <update id="updateLoggedIn" parameterType="com.cgm.poemnow.domain.User">
        UPDATE user
        SET is_logged_in = #{isLoggedIn}
        WHERE user_id = #{userId}
    </update>

    <select id="selectUserByIdentifierAndPassword" parameterType="java.util.Map" resultType="com.cgm.poemnow.domain.User">
        SELECT *
        FROM user
        WHERE user_id = #{userId}
        AND password = #{password}
    </select>

    <select id="getLoggedInUser" parameterType="String" resultType="com.cgm.poemnow.domain.User">
        SELECT *
        FROM user
        WHERE user_id = #{userId}
        AND is_logged_in = TRUE
    </select>

    <select id="selectUserById" parameterType="String" resultMap="userMap">
        SELECT *
        FROM user
        WHERE user_id = #{userId}
    </select>

    <!-- todo: 업데이트 할 때 이메일과 비밀번호를 변경하는 기능도 추가-->
    <update id="updateUser" parameterType="com.cgm.poemnow.domain.User">
        UPDATE user
        SET user_nickname = #{userNickname}, profile_pic = #{profilePic}, bio = #{bio}, social_url = #{socialUrl}, updated_at = now()
        WHERE user_id = #{userId}
    </update>

    <update id="deleteUser" parameterType="com.cgm.poemnow.domain.User">
        UPDATE user
        SET is_active = FALSE
        WHERE user_id = #{userId}
    </update>

    <select id="selectUsersByNickname" resultType="com.cgm.poemnow.domain.User">
        SELECT * FROM user WHERE user_nickname LIKE concat('%' , #{keyword}, '%') ORDER BY
        <choose>
            <when test="sortOrder == 'follower_cnt'"> follower_cnt DESC</when>
            <otherwise>created_at DESC</otherwise>
        </choose>
    </select>

</mapper>